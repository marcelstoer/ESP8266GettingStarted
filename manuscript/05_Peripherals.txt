# Using External Components

In the last chapter we learned how to use the ESP8266's core hardware. By connecting external components to our micro controller we can do a lot more than that! In the first part of this chapter we connect the OLED display and learn how to program it. In the second part we use the DHT sensor to measure humidity and temperature.

## Preparation

Please make sure that you have downloaded the exercises from the last chapter since we will continue to use them here. In addition we will have to install two libraries: one for the display and one for the DHT sensor.

I> **Libraries**: If you are new to programming you might ask what libraries are. When we develop programs we use libraries to not have to invent the wheel over and over again. Libraries contain functionality that might be used in different places without creating copies of code which is hard to maintain. So for you libraries are a wonderful thing: you can concentrate on the things that really matter to you. In the case of the WeatherStation they provide a lot of functionality which normally would take you a lot of time to write yourself.

Go to `Sketch > Include Library… > Manage Libraries…` and install the following library. Make sure that you always have the latest version of the libraries installed. Users have reported many issues which could be reduced by simply updating the library. Also make sure that you only have one version of each of the libraries installed.

![SSD1306 OLED Library](images/SSD1306OledLibrary.png)

## Connecting the Display

The WeatherStation Kit comes with an OLED display that has four connectors: `VCC`, `GND`, `SCL` and `SDA`. They have the following meaning:

* `VCC` and `GND` are the power supply of the display. `VCC` is the positive supply voltage and `GND` stands for “ground”. They will be connected to `3V3` and `GND` on the NodeMCU board
* `SCL` and `SDA` are the data lines of the I2C protocol. `SCL` stands for Serial Clock and `SDA` for Serial Data.

In the following diagram I used a breadboard and male-to-male jumpers to connect the components. But you can also connect them directly with four (colored) female-to-female jumpers. They come with the WeatherStation Kit. Just peel the first four wires off of the bundle and connect them according to the picture. The colors do not matter.

![Wiring the Weather Station](images/Wiring.png)

Please note: there are versions of the OLED display with swapped `GND` and `VCC` pins. Be careful to connect them according to the printed labels, not (necessarily) this diagram!

| NodeMCU Pin | OLED Display Pin |
|-------------|------------------|
| 3V3         | VCC              |
| GND         | GND              |
| D3          | SDA              |
| D4          | SCL              |

As mentioned earlier, there exists a little confusion about the pin names. The Arduino IDE uses the GPIO number given by the chip. The NodeMCU team who designed the board changed the pin naming for their LUA firmware. If you are programming a NodeMCU module you can use the printed `D#` names. If you use a generic ESP8266 module then you have to use the corresponding GPIO numbers. Here is a table of the mapping:

| NodeMCU Index | ESP8266 Internal | NodeMCU Index | ESP8266 Internal | 
|---------------|------------------|---------------|------------------|
| D0            | GPIO16           | D7            | GPIO13           |
| D1            | GPIO5            | D8            | GPIO5            |
| D2            | GPIO4            | D9            | GPIO3            |
| D3            | GPIO0            | D10           | GPIO1            |
| D4            | GPIO2            | D11           | GPIO9            |
| D5            | GPIO14           | D12           | GPIO10           |
| D6            | GPIO12           |               |                  |

The NodeMCU Index is the name on the board, whereas the ESP8266 Internal column
is the one you use in the Arduino IDE code: e.g. `D5` on the board is pin `GPIO14` in C/C++.

## Hello World

In the last chapter we learned how to write the words "Hello World" to the serial console. Now we are going to do the same with the OLED display.

I> **Displays and Pixels**: The smallest unit of a display is called a pixel. It is usually a single dot that - depending of the capabilities of the display - can have two or more colors. A pixel on our OLED display can only have one of two states: it is either on (white) or off (black). The geometry of a display is described by the number of pixels it has in the horizontal and the vertical dimension. The OLED display has 128 horizontal pixels and 64 vertical pixels which makes 8192 distinct pixels (128*64). Display libraries help you to address these pixels. Instead of setting single pixels you can draw objects such as text, lines or circles.

To communicate with the display we have to prepare a few things. First we have to tell the micro controller which GPIO pins we are going to use to communicate with the display. 
